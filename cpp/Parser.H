/* File generated by the BNF Converter (bnfc 2.9.4). */

#ifndef PARSER_HEADER_FILE
#define PARSER_HEADER_FILE

#include<vector>
#include<string>
#include<cstdio>
#include "Absyn.H"


Entry* pEntry(FILE *inp);
Entry* pEntry(const char *str);
BlocoDefinicoes* pBlocoDefinicoes(FILE *inp);
BlocoDefinicoes* pBlocoDefinicoes(const char *str);
BlocoFuncaoEProc* pBlocoFuncaoEProc(FILE *inp);
BlocoFuncaoEProc* pBlocoFuncaoEProc(const char *str);
BlocoConstante* pBlocoConstante(FILE *inp);
BlocoConstante* pBlocoConstante(const char *str);
RegraBlocoConstante* pRegraBlocoConstante(FILE *inp);
RegraBlocoConstante* pRegraBlocoConstante(const char *str);
BlocoTipo* pBlocoTipo(FILE *inp);
BlocoTipo* pBlocoTipo(const char *str);
RegraBlocoTipo* pRegraBlocoTipo(FILE *inp);
RegraBlocoTipo* pRegraBlocoTipo(const char *str);
BlocoVar* pBlocoVar(FILE *inp);
BlocoVar* pBlocoVar(const char *str);
RegraBlocoVar* pRegraBlocoVar(FILE *inp);
RegraBlocoVar* pRegraBlocoVar(const char *str);
BlocoComando* pBlocoComando(FILE *inp);
BlocoComando* pBlocoComando(const char *str);
RegraComando* pRegraComando(FILE *inp);
RegraComando* pRegraComando(const char *str);
Comando* pComando(FILE *inp);
Comando* pComando(const char *str);
Atribuicao* pAtribuicao(FILE *inp);
Atribuicao* pAtribuicao(const char *str);
SubEscrito* pSubEscrito(FILE *inp);
SubEscrito* pSubEscrito(const char *str);
RegraTipo* pRegraTipo(FILE *inp);
RegraTipo* pRegraTipo(const char *str);
TipoPrimitivo* pTipoPrimitivo(FILE *inp);
TipoPrimitivo* pTipoPrimitivo(const char *str);
Valor* pValor(FILE *inp);
Valor* pValor(const char *str);
TipoDerivado* pTipoDerivado(FILE *inp);
TipoDerivado* pTipoDerivado(const char *str);
Ponteiro* pPonteiro(FILE *inp);
Ponteiro* pPonteiro(const char *str);
Vetor* pVetor(FILE *inp);
Vetor* pVetor(const char *str);
If* pIf(FILE *inp);
If* pIf(const char *str);
While* pWhile(FILE *inp);
While* pWhile(const char *str);
For* pFor(FILE *inp);
For* pFor(const char *str);
Goto* pGoto(FILE *inp);
Goto* pGoto(const char *str);
Rotulo* pRotulo(FILE *inp);
Rotulo* pRotulo(const char *str);
Struct* pStruct(FILE *inp);
Struct* pStruct(const char *str);
DefinicaoCampoStruct* pDefinicaoCampoStruct(FILE *inp);
DefinicaoCampoStruct* pDefinicaoCampoStruct(const char *str);
AtribuicaoStruct* pAtribuicaoStruct(FILE *inp);
AtribuicaoStruct* pAtribuicaoStruct(const char *str);
OperadorRelacional* pOperadorRelacional(FILE *inp);
OperadorRelacional* pOperadorRelacional(const char *str);
OperadorLogico* pOperadorLogico(FILE *inp);
OperadorLogico* pOperadorLogico(const char *str);
Negacao* pNegacao(FILE *inp);
Negacao* pNegacao(const char *str);
OperadorAritmetico* pOperadorAritmetico(FILE *inp);
OperadorAritmetico* pOperadorAritmetico(const char *str);
Case* pCase(FILE *inp);
Case* pCase(const char *str);
RegraSeletor* pRegraSeletor(FILE *inp);
RegraSeletor* pRegraSeletor(const char *str);
Seletor* pSeletor(FILE *inp);
Seletor* pSeletor(const char *str);
ChamadaFuncaoEProc* pChamadaFuncaoEProc(FILE *inp);
ChamadaFuncaoEProc* pChamadaFuncaoEProc(const char *str);
ListaIdent* pListaIdent(FILE *inp);
ListaIdent* pListaIdent(const char *str);
Funcao* pFuncao(FILE *inp);
Funcao* pFuncao(const char *str);
Procedimento* pProcedimento(FILE *inp);
Procedimento* pProcedimento(const char *str);
ExpressaoAritmetica* pExpressaoAritmetica(FILE *inp);
ExpressaoAritmetica* pExpressaoAritmetica(const char *str);
Operando* pOperando(FILE *inp);
Operando* pOperando(const char *str);
RegraAritmetica* pRegraAritmetica(FILE *inp);
RegraAritmetica* pRegraAritmetica(const char *str);
ExpressaoRelacional* pExpressaoRelacional(FILE *inp);
ExpressaoRelacional* pExpressaoRelacional(const char *str);
RegraRelacional* pRegraRelacional(FILE *inp);
RegraRelacional* pRegraRelacional(const char *str);
ExpressaoLogica* pExpressaoLogica(FILE *inp);
ExpressaoLogica* pExpressaoLogica(const char *str);
RegraLogico* pRegraLogico(FILE *inp);
RegraLogico* pRegraLogico(const char *str);


#endif
